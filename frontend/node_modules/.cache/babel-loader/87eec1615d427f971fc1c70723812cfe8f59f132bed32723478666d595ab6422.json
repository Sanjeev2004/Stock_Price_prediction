{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjeev\\\\Documents\\\\STOCK PRICE PREDICTION\\\\frontend\\\\src\\\\components\\\\StockChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Chart ke liye zaroori components ko register karein\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction StockChart({\n  historical,\n  predicted\n}) {\n  // Historical aur predicted data ko combine karein\n  const combinedData = historical.concat(predicted);\n\n  // Labels banayein (e.g., Day 1, Day 2...)\n  const labels = combinedData.map((_, index) => `Day ${index + 1}`);\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Historical Data',\n      data: historical,\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)'\n    }, {\n      label: 'Predicted Data',\n      data: Array(historical.length).fill(null).concat(predicted),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Days'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Price'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Stock Price Prediction Chart'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: 400\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_c = StockChart;\nexport default StockChart;\nvar _c;\n$RefreshReg$(_c, \"StockChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","StockChart","historical","predicted","combinedData","concat","labels","map","_","index","data","datasets","label","borderColor","backgroundColor","Array","length","fill","options","responsive","scales","x","title","display","text","y","plugins","legend","position","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sanjeev/Documents/STOCK PRICE PREDICTION/frontend/src/components/StockChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\n\r\n// Chart ke liye zaroori components ko register karein\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nfunction StockChart({ historical, predicted }) {\r\n    // Historical aur predicted data ko combine karein\r\n    const combinedData = historical.concat(predicted);\r\n\r\n    // Labels banayein (e.g., Day 1, Day 2...)\r\n    const labels = combinedData.map((_, index) => `Day ${index + 1}`);\r\n\r\n    const data = {\r\n        labels,\r\n        datasets: [\r\n            {\r\n                label: 'Historical Data',\r\n                data: historical,\r\n                borderColor: 'rgb(53, 162, 235)',\r\n                backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n            },\r\n            {\r\n                label: 'Predicted Data',\r\n                data: Array(historical.length).fill(null).concat(predicted),\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Days'\r\n                }\r\n            },\r\n            y: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Price'\r\n                }\r\n            }\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                position: 'top',\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: 'Stock Price Prediction Chart',\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: 400 }}>\r\n            <Line options={options} data={data} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StockChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CACZT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACJ,CAAC;AAED,SAASI,UAAUA,CAAC;EAAEC,UAAU;EAAEC;AAAU,CAAC,EAAE;EAC3C;EACA,MAAMC,YAAY,GAAGF,UAAU,CAACG,MAAM,CAACF,SAAS,CAAC;;EAEjD;EACA,MAAMG,MAAM,GAAGF,YAAY,CAACG,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK,OAAOA,KAAK,GAAG,CAAC,EAAE,CAAC;EAEjE,MAAMC,IAAI,GAAG;IACTJ,MAAM;IACNK,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,iBAAiB;MACxBF,IAAI,EAAER,UAAU;MAChBW,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACrB,CAAC,EACD;MACIF,KAAK,EAAE,gBAAgB;MACvBF,IAAI,EAAEK,KAAK,CAACb,UAAU,CAACc,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAACZ,MAAM,CAACF,SAAS,CAAC;MAC3DU,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE;IACrB,CAAC;EAET,CAAC;EAED,MAAMI,OAAO,GAAG;IACZC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACV;MACJ,CAAC;MACDC,CAAC,EAAE;QACCH,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACV;MACJ;IACJ,CAAC;IACDE,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,QAAQ,EAAE;MACd,CAAC;MACDN,KAAK,EAAE;QACHC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAK8B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAI,CAAE;IAAAC,QAAA,eACvCjC,OAAA,CAACX,IAAI;MAAC8B,OAAO,EAAEA,OAAQ;MAACR,IAAI,EAAEA;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEd;AAACC,EAAA,GAzDQpC,UAAU;AA2DnB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}