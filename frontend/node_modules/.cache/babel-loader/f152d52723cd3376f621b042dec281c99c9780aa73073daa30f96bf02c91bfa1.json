{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjeev\\\\Documents\\\\STOCK PRICE PREDICTION\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getPrediction } from \"../services/api\";\nimport PredictionTable from \"../components/PredictionTable\";\nimport StockChart from \"../components/StockChart\";\nimport NewsSentiment from \"../components/NewsSentiment\"; // Ensure this is imported\nimport './Home.css'; // Home.js me is tarah import karein\n// ...baaki code\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [company, setCompany] = useState(\"AAPL\");\n  const [prediction, setPrediction] = useState(null);\n  const [inputData, setInputData] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handlePredict = async () => {\n    setLoading(true);\n    setError(null);\n    setPrediction(null);\n    try {\n      // Brackets aur spaces ko remove karein\n      const cleanedInput = inputData.replace(/[\\[\\]\\s]/g, '');\n      const historicalData = cleanedInput.split(',').map(Number);\n      if (historicalData.some(isNaN) || historicalData.length === 0) {\n        setError(\"Please enter valid comma-separated numbers.\");\n        setLoading(false);\n        return;\n      }\n      const formattedData = [historicalData];\n      const result = await getPrediction(company, formattedData);\n      if (result && result.prediction) {\n        setPrediction(result.prediction[0]);\n      } else {\n        setError(\"No prediction found. Please check your input and the backend server.\");\n      }\n    } catch (err) {\n      console.error(\"Prediction error:\", err);\n      setError(\"Failed to get a prediction. The server might be down.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ek hi return statement hona chahiye\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Price Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a company and enter the last few days' stock prices to get a prediction.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setCompany(e.target.value),\n      value: company,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"AAPL\",\n        children: \"Apple (AAPL)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GOOGL\",\n        children: \"Google (GOOGL)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MSFT\",\n        children: \"Microsoft (MSFT)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputData,\n      onChange: e => setInputData(e.target.value),\n      placeholder: \"Enter historical data (e.g., 150, 152, 151, 155, 158)\",\n      style: {\n        width: '300px',\n        margin: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePredict,\n      disabled: loading,\n      children: loading ? \"Predicting...\" : \"Predict\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PredictionTable, {\n        data: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(StockChart, {\n        historical: inputData.split(',').map(Number),\n        predicted: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NewsSentiment, {\n        company: company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"HGgt0p/7MKfAu1HkCx7woo4nZn8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","getPrediction","PredictionTable","StockChart","NewsSentiment","jsxDEV","_jsxDEV","Home","_s","company","setCompany","prediction","setPrediction","inputData","setInputData","loading","setLoading","error","setError","handlePredict","cleanedInput","replace","historicalData","split","map","Number","some","isNaN","length","formattedData","result","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","style","width","margin","onClick","disabled","color","data","historical","predicted","_c","$RefreshReg$"],"sources":["C:/Users/Sanjeev/Documents/STOCK PRICE PREDICTION/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getPrediction } from \"../services/api\";\r\nimport PredictionTable from \"../components/PredictionTable\";\r\nimport StockChart from \"../components/StockChart\";\r\nimport NewsSentiment from \"../components/NewsSentiment\"; // Ensure this is imported\r\nimport './Home.css'; // Home.js me is tarah import karein\r\n// ...baaki code\r\nfunction Home() {\r\n    const [company, setCompany] = useState(\"AAPL\");\r\n    const [prediction, setPrediction] = useState(null);\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handlePredict = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setPrediction(null);\r\n\r\n        try {\r\n            // Brackets aur spaces ko remove karein\r\n            const cleanedInput = inputData.replace(/[\\[\\]\\s]/g, '');\r\n            const historicalData = cleanedInput.split(',').map(Number);\r\n\r\n            if (historicalData.some(isNaN) || historicalData.length === 0) {\r\n                setError(\"Please enter valid comma-separated numbers.\");\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            const formattedData = [historicalData];\r\n            const result = await getPrediction(company, formattedData);\r\n\r\n            if (result && result.prediction) {\r\n                setPrediction(result.prediction[0]);\r\n            } else {\r\n                setError(\"No prediction found. Please check your input and the backend server.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Prediction error:\", err);\r\n            setError(\"Failed to get a prediction. The server might be down.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Ek hi return statement hona chahiye\r\n    return (\r\n        <div>\r\n            <h1>Stock Price Prediction</h1>\r\n            <p>Select a company and enter the last few days' stock prices to get a prediction.</p>\r\n\r\n            <select onChange={(e) => setCompany(e.target.value)} value={company}>\r\n                <option value=\"AAPL\">Apple (AAPL)</option>\r\n                <option value=\"GOOGL\">Google (GOOGL)</option>\r\n                <option value=\"MSFT\">Microsoft (MSFT)</option>\r\n            </select>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={inputData}\r\n                onChange={(e) => setInputData(e.target.value)}\r\n                placeholder=\"Enter historical data (e.g., 150, 152, 151, 155, 158)\"\r\n                style={{ width: '300px', margin: '10px' }}\r\n            />\r\n\r\n            <button onClick={handlePredict} disabled={loading}>\r\n                {loading ? \"Predicting...\" : \"Predict\"}\r\n            </button>\r\n\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n\r\n            {/* Render components only when there is a prediction result */}\r\n            {prediction && (\r\n                <div>\r\n                    <PredictionTable data={prediction} />\r\n                    <StockChart historical={inputData.split(',').map(Number)} predicted={prediction} />\r\n                    <NewsSentiment company={company} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}